// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaeedLearn.Persistence;

#nullable disable

namespace SaeedLearn.Persistence.Migrations
{
    [DbContext(typeof(SaeedLearnDbContext))]
    partial class SaeedLearnDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SaeedLearn.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 6, 15, 16, 56, 47, 797, DateTimeKind.Local).AddTicks(3412),
                            Name = "طراحی وب"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 6, 15, 16, 56, 47, 797, DateTimeKind.Local).AddTicks(3415),
                            Name = "فرانت اند"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 6, 15, 16, 56, 47, 797, DateTimeKind.Local).AddTicks(3417),
                            Name = "بک اند"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 6, 15, 16, 56, 47, 797, DateTimeKind.Local).AddTicks(3418),
                            Name = "هوش مصنوعی"
                        });
                });

            modelBuilder.Entity("SaeedLearn.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveCourse")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Offer")
                        .HasColumnType("real");

                    b.Property<string>("PicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveCourse = true,
                            DateCreated = new DateTime(2023, 6, 15, 16, 56, 47, 797, DateTimeKind.Local).AddTicks(2917),
                            Description = "لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ، و با استفاده از طراحان گرافیک است، چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است، و برای شرایط فعلی تکنولوژی مورد نیاز، و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد، کتابهای زیادی در شصت و سه درصد گذشته حال و آینده، شناخت فراوان جامعه و متخصصان را می طلبد، تا با نرم افزارها شناخت بیشتری را برای طراحان رایانه ای علی الخصوص طراحان خلاقی، و فرهنگ پیشرو در زبان فارسی ایجاد کرد، در این صورت می توان امید داشت که تمام و دشواری موجود در ارائه راهکارها، و شرایط سخت تایپ به پایان رسد و زمان مورد نیاز شامل حروفچینی دستاوردهای اصلی، و جوابگوی سوالات پیوسته اهل دنیای موجود طراحی اساسا مورد استفاده قرار گیرد.",
                            Name = "آموزش C#",
                            Offer = 0f,
                            PicturePath = "",
                            Price = 2000000.0,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActiveCourse = true,
                            DateCreated = new DateTime(2023, 6, 15, 16, 56, 47, 797, DateTimeKind.Local).AddTicks(2931),
                            Description = "لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ، و با استفاده از طراحان گرافیک است، چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است، و برای شرایط فعلی تکنولوژی مورد نیاز، و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد، کتابهای زیادی در شصت و سه درصد گذشته حال و آینده، شناخت فراوان جامعه و متخصصان را می طلبد، تا با نرم افزارها شناخت بیشتری را برای طراحان رایانه ای علی الخصوص طراحان خلاقی، و فرهنگ پیشرو در زبان فارسی ایجاد کرد، در این صورت می توان امید داشت که تمام و دشواری موجود در ارائه راهکارها، و شرایط سخت تایپ به پایان رسد و زمان مورد نیاز شامل حروفچینی دستاوردهای اصلی، و جوابگوی سوالات پیوسته اهل دنیای موجود طراحی اساسا مورد استفاده قرار گیرد.",
                            Name = "آموزش جاوااسکریپت",
                            Offer = 0f,
                            PicturePath = "",
                            Price = 3000000.0,
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("SaeedLearn.Domain.CourseCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            CourseId = 2
                        });
                });

            modelBuilder.Entity("SaeedLearn.Domain.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 6, 15, 16, 56, 47, 797, DateTimeKind.Local).AddTicks(3468),
                            Name = "سعید قطبی"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 6, 15, 16, 56, 47, 797, DateTimeKind.Local).AddTicks(3470),
                            Name = "محسن نیری"
                        });
                });

            modelBuilder.Entity("SaeedLearn.Domain.Course", b =>
                {
                    b.HasOne("SaeedLearn.Domain.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SaeedLearn.Domain.CourseCategory", b =>
                {
                    b.HasOne("SaeedLearn.Domain.Category", "Category")
                        .WithMany("CourseCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaeedLearn.Domain.Course", "Course")
                        .WithMany("CourseCategories")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("SaeedLearn.Domain.Category", b =>
                {
                    b.Navigation("CourseCategories");
                });

            modelBuilder.Entity("SaeedLearn.Domain.Course", b =>
                {
                    b.Navigation("CourseCategories");
                });

            modelBuilder.Entity("SaeedLearn.Domain.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
